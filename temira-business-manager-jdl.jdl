application {
  config {
    baseName temira,
    applicationType monolith,
    authenticationType jwt,
    packageName ar.edu.um.temira,
    prodDatabaseType mysql,
    buildTool maven,
    enableSwaggerCodegen true,
    enableTranslation true,
    nativeLanguage es,
    languages [es, en],
    clientFramework angular,
    testFrameworks [],
    clientTheme darkly
  }
  
  entities *
}

entity Vehicle {
    model Integer required min(1900) max(2100),
    type VehicleType,
    brand VehicleBrand,
}

entity Driver {
    firstName String required minlength(3),
    lastName String required minlength(3)
}

entity SleepDetector {
}

entity Statement {
    dateCreation Instant required,
    destination String required minlength(3),
    pathCsv String required minlength(3)
}

enum VehicleType {
    Camion, Autobus, Tren, Casas Rodantes, Furgon, Camioneta, Auto
}

enum VehicleBrand {
    Mercedes Benz, Scania, Volvo Trucks, Iveco, Ford,
    Marcopolo, Agrale, Volvo Buses, Materfer, Alstom,
    CAF, Sprinter Camper, Volkswagen,
    Iveco Daily Camper, Renault, Peugeot, Citroen,
    Ford Transit, Ford Ranger
}

relationship ManyToOne {
    Statement{sleepDetector} to SleepDetector,
    Statement{vehicle} to Vehicle,
    Statement{driver} to Driver
}

relationship ManyToOne {
    Vehicle{user(login)} to User with builtInEntity,
    Driver{user(login)} to User with builtInEntity,
    SleepDetector{user(login)} to User with builtInEntity
}

relationship OneToOne {
    SleepDetector{vehicle} to Vehicle,
    SleepDetector{driver(firstName)} to Driver
}

paginate Vehicle, SleepDetector, Statement, Driver with pagination
dto Vehicle, SleepDetector, Statement, Driver with mapstruct
service all with serviceClass
